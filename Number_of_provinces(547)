There are n cities. Some of them are connected, while some are not. If city a is connected directly with city b, and city b is connected directly with city c, then city a is connected indirectly with city c.

A province is a group of directly or indirectly connected cities and no other cities outside of the group.

You are given an n x n matrix isConnected where isConnected[i][j] = 1 if the ith city and the jth city are directly connected, and isConnected[i][j] = 0 otherwise.

Return the total number of provinces.


class Solution {
    public int findCircleNum(int[][] isConnected) {
        int c=0;
        boolean[] visited=new boolean[isConnected.length];
        for(int i=0;i<isConnected.length;i++)
        {
            if(!visited[i])
            {
                c++;
                Queue<Integer> queue=new LinkedList<>();
                queue.offer(i);
                while(!queue.isEmpty())
                {
                    int a=queue.poll();
                    for(int j=0;j<isConnected.length;j++)
                    {
                        if(isConnected[a][j]==1 && !visited[j])
                        {
                            visited[j]=true;
                            queue.offer(j);
                        }
                    }
                }
            }
        }
        
        return c;
    }
}
